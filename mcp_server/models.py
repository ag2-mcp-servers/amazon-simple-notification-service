# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:53:27+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AmazonResourceName(RootModel[constr(min_length=1, max_length=1011)]):
    root: constr(min_length=1, max_length=1011)


class AuthorizationErrorException(RootModel[Any]):
    root: Any


class BatchEntryIdsNotDistinctException(RootModel[Any]):
    root: Any


class BatchRequestTooLongException(RootModel[Any]):
    root: Any


class Binary(RootModel[str]):
    root: str


class ConcurrentAccessException(RootModel[Any]):
    root: Any


class CreateSMSSandboxPhoneNumberResult(BaseModel):
    pass


class DeleteSMSSandboxPhoneNumberResult(BaseModel):
    pass


class EmptyBatchRequestException(RootModel[Any]):
    root: Any


class EndpointDisabledException(RootModel[Any]):
    root: Any


class FilterPolicyLimitExceededException(RootModel[Any]):
    root: Any


class GetSMSSandboxAccountStatusInput(BaseModel):
    pass


class InternalErrorException(RootModel[Any]):
    root: Any


class InvalidBatchEntryIdException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class InvalidParameterValueException(RootModel[Any]):
    root: Any


class InvalidSecurityException(RootModel[Any]):
    root: Any


class Iso2CountryCode(RootModel[constr(pattern=r'^[A-Za-z]{2}$', max_length=2)]):
    root: constr(pattern=r'^[A-Za-z]{2}$', max_length=2) = Field(
        ...,
        description='The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. For example, GB or US.',
    )


class KMSAccessDeniedException(RootModel[Any]):
    root: Any


class KMSDisabledException(RootModel[Any]):
    root: Any


class KMSInvalidStateException(RootModel[Any]):
    root: Any


class KMSNotFoundException(RootModel[Any]):
    root: Any


class KMSOptInRequired(RootModel[Any]):
    root: Any


class KMSThrottlingException(RootModel[Any]):
    root: Any


class LanguageCodeString(Enum):
    en_US = 'en-US'
    en_GB = 'en-GB'
    es_419 = 'es-419'
    es_ES = 'es-ES'
    de_DE = 'de-DE'
    fr_CA = 'fr-CA'
    fr_FR = 'fr-FR'
    it_IT = 'it-IT'
    ja_JP = 'ja-JP'
    pt_BR = 'pt-BR'
    kr_KR = 'kr-KR'
    zh_CN = 'zh-CN'
    zh_TW = 'zh-TW'


class ListTagsForResourceRequest(BaseModel):
    ResourceArn: AmazonResourceName


class MaxItems(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class MaxItemsListOriginationNumbers(RootModel[conint(ge=1, le=30)]):
    root: conint(ge=1, le=30)


class NotFoundException(RootModel[Any]):
    root: Any


class NumberCapability(Enum):
    SMS = 'SMS'
    MMS = 'MMS'
    VOICE = 'VOICE'


class NumberCapabilityList(RootModel[List[NumberCapability]]):
    root: List[NumberCapability] = Field(
        ..., description='List of number capability (SMS,MMS,Voice).'
    )


class OTPCode(RootModel[constr(pattern=r'^[0-9]+$', min_length=5, max_length=8)]):
    root: constr(pattern=r'^[0-9]+$', min_length=5, max_length=8) = Field(
        ...,
        description='String of Origination/Destination address including phone numbers and email addresses',
    )


class OptInPhoneNumberResponse(BaseModel):
    pass


class OptedOutException(RootModel[Any]):
    root: Any


class PhoneNumber(RootModel[str]):
    root: str


class PhoneNumberList(RootModel[List[PhoneNumber]]):
    root: List[PhoneNumber]


class PhoneNumberString(
    RootModel[constr(pattern=r'^(\+[0-9]{8,}|[0-9]{0,9})$', max_length=20)]
):
    root: constr(pattern=r'^(\+[0-9]{8,}|[0-9]{0,9})$', max_length=20)


class PlatformApplicationDisabledException(RootModel[Any]):
    root: Any


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RouteType(Enum):
    Transactional = 'Transactional'
    Promotional = 'Promotional'
    Premium = 'Premium'


class SMSSandboxPhoneNumberVerificationStatus(Enum):
    Pending = 'Pending'
    Verified = 'Verified'


class SetSMSAttributesResponse(BaseModel):
    pass


class StaleTagException(RootModel[Any]):
    root: Any


class String(RootModel[str]):
    root: str


class SubscriptionLimitExceededException(RootModel[Any]):
    root: Any


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey]


class TagLimitExceededException(RootModel[Any]):
    root: Any


class TagPolicyException(RootModel[Any]):
    root: Any


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class ThrottledException(RootModel[Any]):
    root: Any


class Timestamp(RootModel[datetime]):
    root: datetime


class TooManyEntriesInBatchRequestException(RootModel[Any]):
    root: Any


class TopicLimitExceededException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    ResourceArn: AmazonResourceName
    TagKeys: TagKeyList


class UntagResourceResponse(BaseModel):
    pass


class UserErrorException(RootModel[Any]):
    root: Any


class ValidationException(RootModel[Any]):
    root: Any


class VerificationException(RootModel[Any]):
    root: Any


class VerifySMSSandboxPhoneNumberInput(BaseModel):
    OneTimePassword: OTPCode
    PhoneNumber: PhoneNumberString


class VerifySMSSandboxPhoneNumberResult(BaseModel):
    pass


class Account(RootModel[str]):
    root: str


class Action(RootModel[str]):
    root: str


class AttributeName(RootModel[str]):
    root: str


class AttributeValue(RootModel[str]):
    root: str


class AuthenticateOnUnsubscribe(RootModel[str]):
    root: str


class Boolean(RootModel[bool]):
    root: bool


class Delegate(RootModel[str]):
    root: str


class Endpoint(RootModel[str]):
    root: str


class Label(RootModel[str]):
    root: str


class Message(RootModel[str]):
    root: str


class MessageId(RootModel[str]):
    root: str


class MessageStructure(RootModel[str]):
    root: str


class NextToken(RootModel[str]):
    root: str


class Protocol(RootModel[str]):
    root: str


class Subject(RootModel[str]):
    root: str


class SubscriptionARN(RootModel[str]):
    root: str


class Token(RootModel[str]):
    root: str


class TopicARN(RootModel[str]):
    root: str


class TopicName(RootModel[str]):
    root: str


class Action1(Enum):
    AddPermission = 'AddPermission'


class Version(Enum):
    field_2010_03_31 = '2010-03-31'


class AWSAccountId(RootModel[List[Delegate]]):
    root: List[Delegate]


class ActionName(RootModel[List[Action]]):
    root: List[Action]


class Action5(Enum):
    CheckIfPhoneNumberIsOptedOut = 'CheckIfPhoneNumberIsOptedOut'


class Action9(Enum):
    ConfirmSubscription = 'ConfirmSubscription'


class Action13(Enum):
    CreatePlatformApplication = 'CreatePlatformApplication'


class Attributes(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class Action17(Enum):
    CreatePlatformEndpoint = 'CreatePlatformEndpoint'


class LanguageCode(Enum):
    en_US = 'en-US'
    en_GB = 'en-GB'
    es_419 = 'es-419'
    es_ES = 'es-ES'
    de_DE = 'de-DE'
    fr_CA = 'fr-CA'
    fr_FR = 'fr-FR'
    it_IT = 'it-IT'
    ja_JP = 'ja-JP'
    pt_BR = 'pt-BR'
    kr_KR = 'kr-KR'
    zh_CN = 'zh-CN'
    zh_TW = 'zh-TW'


class Action21(Enum):
    CreateSMSSandboxPhoneNumber = 'CreateSMSSandboxPhoneNumber'


class Action25(Enum):
    CreateTopic = 'CreateTopic'


class Attributes2(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class Action29(Enum):
    DeleteEndpoint = 'DeleteEndpoint'


class Action33(Enum):
    DeletePlatformApplication = 'DeletePlatformApplication'


class Action37(Enum):
    DeleteSMSSandboxPhoneNumber = 'DeleteSMSSandboxPhoneNumber'


class Action41(Enum):
    DeleteTopic = 'DeleteTopic'


class Action45(Enum):
    GetDataProtectionPolicy = 'GetDataProtectionPolicy'


class Action49(Enum):
    GetEndpointAttributes = 'GetEndpointAttributes'


class Action53(Enum):
    GetPlatformApplicationAttributes = 'GetPlatformApplicationAttributes'


class Action57(Enum):
    GetSMSAttributes = 'GetSMSAttributes'


class Attributes3(RootModel[List[String]]):
    root: List[String]


class Action61(Enum):
    GetSMSSandboxAccountStatus = 'GetSMSSandboxAccountStatus'


class Action65(Enum):
    GetSubscriptionAttributes = 'GetSubscriptionAttributes'


class Action69(Enum):
    GetTopicAttributes = 'GetTopicAttributes'


class Action73(Enum):
    ListEndpointsByPlatformApplication = 'ListEndpointsByPlatformApplication'


class Action77(Enum):
    ListOriginationNumbers = 'ListOriginationNumbers'


class Action81(Enum):
    ListPhoneNumbersOptedOut = 'ListPhoneNumbersOptedOut'


class Action85(Enum):
    ListPlatformApplications = 'ListPlatformApplications'


class Action89(Enum):
    ListSMSSandboxPhoneNumbers = 'ListSMSSandboxPhoneNumbers'


class Action93(Enum):
    ListSubscriptions = 'ListSubscriptions'


class Action97(Enum):
    ListSubscriptionsByTopic = 'ListSubscriptionsByTopic'


class Action101(Enum):
    ListTagsForResource = 'ListTagsForResource'


class Action105(Enum):
    ListTopics = 'ListTopics'


class Action109(Enum):
    OptInPhoneNumber = 'OptInPhoneNumber'


class Action113(Enum):
    Publish = 'Publish'


class Action117(Enum):
    PublishBatch = 'PublishBatch'


class Action121(Enum):
    PutDataProtectionPolicy = 'PutDataProtectionPolicy'


class Action125(Enum):
    RemovePermission = 'RemovePermission'


class Action129(Enum):
    SetEndpointAttributes = 'SetEndpointAttributes'


class Attributes4(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class Action133(Enum):
    SetPlatformApplicationAttributes = 'SetPlatformApplicationAttributes'


class Action137(Enum):
    SetSMSAttributes = 'SetSMSAttributes'


class Action141(Enum):
    SetSubscriptionAttributes = 'SetSubscriptionAttributes'


class Action145(Enum):
    SetTopicAttributes = 'SetTopicAttributes'


class Action149(Enum):
    Subscribe = 'Subscribe'


class Attributes7(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class Action153(Enum):
    TagResource = 'TagResource'


class Action157(Enum):
    Unsubscribe = 'Unsubscribe'


class Action161(Enum):
    UntagResource = 'UntagResource'


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey]


class Action165(Enum):
    VerifySMSSandboxPhoneNumber = 'VerifySMSSandboxPhoneNumber'


class ActionsList(RootModel[List[Action]]):
    root: List[Action]


class BatchResultErrorEntry(BaseModel):
    Code: String
    Id: String
    Message: Optional[String] = None
    SenderFault: Boolean


class BatchResultErrorEntryList(RootModel[List[BatchResultErrorEntry]]):
    root: List[BatchResultErrorEntry]


class CheckIfPhoneNumberIsOptedOutInput(BaseModel):
    phoneNumber: PhoneNumber


class CheckIfPhoneNumberIsOptedOutResponse(BaseModel):
    isOptedOut: Optional[Boolean] = None


class ConfirmSubscriptionInput(BaseModel):
    AuthenticateOnUnsubscribe_1: Optional[AuthenticateOnUnsubscribe] = Field(
        None, alias='AuthenticateOnUnsubscribe'
    )
    Token_1: Token = Field(..., alias='Token')
    TopicArn: TopicARN


class ConfirmSubscriptionResponse(BaseModel):
    SubscriptionArn: Optional[SubscriptionARN] = None


class CreateEndpointResponse(BaseModel):
    EndpointArn: Optional[String] = None


class CreatePlatformApplicationResponse(BaseModel):
    PlatformApplicationArn: Optional[String] = None


class CreateSMSSandboxPhoneNumberInput(BaseModel):
    LanguageCode: Optional[LanguageCodeString] = None
    PhoneNumber: PhoneNumberString


class CreateTopicResponse(BaseModel):
    TopicArn: Optional[TopicARN] = None


class DelegatesList(RootModel[List[Delegate]]):
    root: List[Delegate]


class DeleteEndpointInput(BaseModel):
    EndpointArn: String


class DeletePlatformApplicationInput(BaseModel):
    PlatformApplicationArn: String


class DeleteSMSSandboxPhoneNumberInput(BaseModel):
    PhoneNumber: PhoneNumberString


class DeleteTopicInput(BaseModel):
    TopicArn: TopicARN


class GetDataProtectionPolicyInput(BaseModel):
    ResourceArn: TopicARN


class GetDataProtectionPolicyResponse(BaseModel):
    DataProtectionPolicy: Optional[AttributeValue] = None


class GetEndpointAttributesInput(BaseModel):
    EndpointArn: String


class GetPlatformApplicationAttributesInput(BaseModel):
    PlatformApplicationArn: String


class GetSMSSandboxAccountStatusResult(BaseModel):
    IsInSandbox: Boolean


class GetSubscriptionAttributesInput(BaseModel):
    SubscriptionArn: SubscriptionARN


class GetTopicAttributesInput(BaseModel):
    TopicArn: TopicARN


class ListEndpointsByPlatformApplicationInput(BaseModel):
    NextToken: Optional[String] = None
    PlatformApplicationArn: String


class ListOriginationNumbersRequest(BaseModel):
    MaxResults: Optional[MaxItemsListOriginationNumbers] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListPhoneNumbersOptedOutInput(BaseModel):
    nextToken: Optional[String] = None


class ListPhoneNumbersOptedOutResponse(BaseModel):
    nextToken: Optional[String] = None
    phoneNumbers: Optional[PhoneNumberList] = None


class ListPlatformApplicationsInput(BaseModel):
    NextToken: Optional[String] = None


class ListSMSSandboxPhoneNumbersInput(BaseModel):
    MaxResults: Optional[MaxItems] = None
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListString(RootModel[List[String]]):
    root: List[String]


class ListSubscriptionsByTopicInput(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    TopicArn: TopicARN


class ListSubscriptionsInput(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class ListTopicsInput(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class MapStringToString(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class MessageAttributeValue(BaseModel):
    BinaryValue: Optional[Binary] = None
    DataType: String
    StringValue: Optional[String] = None


class OptInPhoneNumberInput(BaseModel):
    phoneNumber: PhoneNumber


class PhoneNumberInformation(BaseModel):
    CreatedAt: Optional[Timestamp] = None
    Iso2CountryCode_1: Optional[Iso2CountryCode] = Field(None, alias='Iso2CountryCode')
    NumberCapabilities: Optional[NumberCapabilityList] = None
    PhoneNumber: Optional[String] = None
    RouteType_1: Optional[RouteType] = Field(None, alias='RouteType')
    Status: Optional[String] = None


class PhoneNumberInformationList(RootModel[List[PhoneNumberInformation]]):
    root: List[PhoneNumberInformation] = Field(
        ..., description='List of customer owned phone numbers.'
    )


class PlatformApplication(BaseModel):
    Attributes: Optional[MapStringToString] = None
    PlatformApplicationArn: Optional[String] = None


class PublishBatchResultEntry(BaseModel):
    Id: Optional[String] = None
    MessageId_1: Optional[MessageId] = Field(None, alias='MessageId')
    SequenceNumber: Optional[String] = None


class PublishBatchResultEntryList(RootModel[List[PublishBatchResultEntry]]):
    root: List[PublishBatchResultEntry]


class PublishResponse(BaseModel):
    MessageId_1: Optional[MessageId] = Field(None, alias='MessageId')
    SequenceNumber: Optional[String] = None


class PutDataProtectionPolicyInput(BaseModel):
    DataProtectionPolicy: AttributeValue
    ResourceArn: TopicARN


class RemovePermissionInput(BaseModel):
    Label_1: Label = Field(..., alias='Label')
    TopicArn: TopicARN


class SMSSandboxPhoneNumber(BaseModel):
    PhoneNumber: Optional[PhoneNumberString] = None
    Status: Optional[SMSSandboxPhoneNumberVerificationStatus] = None


class SMSSandboxPhoneNumberList(RootModel[List[SMSSandboxPhoneNumber]]):
    root: List[SMSSandboxPhoneNumber]


class SetEndpointAttributesInput(BaseModel):
    Attributes: MapStringToString
    EndpointArn: String


class SetPlatformApplicationAttributesInput(BaseModel):
    Attributes: MapStringToString
    PlatformApplicationArn: String


class SetSMSAttributesInput(BaseModel):
    attributes: MapStringToString


class SetSubscriptionAttributesInput(BaseModel):
    AttributeName_1: AttributeName = Field(..., alias='AttributeName')
    AttributeValue_1: Optional[AttributeValue] = Field(None, alias='AttributeValue')
    SubscriptionArn: SubscriptionARN


class SetTopicAttributesInput(BaseModel):
    AttributeName_1: AttributeName = Field(..., alias='AttributeName')
    AttributeValue_1: Optional[AttributeValue] = Field(None, alias='AttributeValue')
    TopicArn: TopicARN


class SubscribeResponse(BaseModel):
    SubscriptionArn: Optional[SubscriptionARN] = None


class Subscription(BaseModel):
    Endpoint_1: Optional[Endpoint] = Field(None, alias='Endpoint')
    Owner: Optional[Account] = None
    Protocol_1: Optional[Protocol] = Field(None, alias='Protocol')
    SubscriptionArn: Optional[SubscriptionARN] = None
    TopicArn: Optional[TopicARN] = None


class SubscriptionAttributesMap(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class SubscriptionsList(RootModel[List[Subscription]]):
    root: List[Subscription]


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class TagList(RootModel[List[Tag]]):
    root: List[Tag]


class TagResourceRequest(BaseModel):
    ResourceArn: AmazonResourceName
    Tags: TagList


class Topic(BaseModel):
    TopicArn: Optional[TopicARN] = None


class TopicAttributesMap(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class TopicsList(RootModel[List[Topic]]):
    root: List[Topic]


class UnsubscribeInput(BaseModel):
    SubscriptionArn: SubscriptionARN


class Tags(RootModel[List[Tag]]):
    root: List[Tag]


class MessageAttributes(RootModel[Optional[Dict[str, MessageAttributeValue]]]):
    root: Optional[Dict[str, MessageAttributeValue]] = None


class AddPermissionInput(BaseModel):
    AWSAccountId: DelegatesList
    ActionName: ActionsList
    Label_1: Label = Field(..., alias='Label')
    TopicArn: TopicARN


class CreatePlatformApplicationInput(BaseModel):
    Attributes: MapStringToString
    Name: String
    Platform: String


class CreatePlatformEndpointInput(BaseModel):
    Attributes: Optional[MapStringToString] = None
    CustomUserData: Optional[String] = None
    PlatformApplicationArn: String
    Token: String


class CreateTopicInput(BaseModel):
    Attributes: Optional[TopicAttributesMap] = None
    DataProtectionPolicy: Optional[AttributeValue] = None
    Name: TopicName
    Tags: Optional[TagList] = None


class EndpointModel(BaseModel):
    Attributes: Optional[MapStringToString] = None
    EndpointArn: Optional[String] = None


class GetEndpointAttributesResponse(BaseModel):
    Attributes: Optional[MapStringToString] = None


class GetPlatformApplicationAttributesResponse(BaseModel):
    Attributes: Optional[MapStringToString] = None


class GetSMSAttributesInput(BaseModel):
    attributes: Optional[ListString] = None


class GetSMSAttributesResponse(BaseModel):
    attributes: Optional[MapStringToString] = None


class GetSubscriptionAttributesResponse(BaseModel):
    Attributes: Optional[SubscriptionAttributesMap] = None


class GetTopicAttributesResponse(BaseModel):
    Attributes: Optional[TopicAttributesMap] = None


class ListOfEndpoints(RootModel[List[EndpointModel]]):
    root: List[EndpointModel]


class ListOfPlatformApplications(RootModel[List[PlatformApplication]]):
    root: List[PlatformApplication]


class ListOriginationNumbersResult(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    PhoneNumbers: Optional[PhoneNumberInformationList] = None


class ListPlatformApplicationsResponse(BaseModel):
    NextToken: Optional[String] = None
    PlatformApplications: Optional[ListOfPlatformApplications] = None


class ListSMSSandboxPhoneNumbersResult(BaseModel):
    NextToken: Optional[String] = None
    PhoneNumbers: SMSSandboxPhoneNumberList


class ListSubscriptionsByTopicResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Subscriptions: Optional[SubscriptionsList] = None


class ListSubscriptionsResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Subscriptions: Optional[SubscriptionsList] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class ListTopicsResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Topics: Optional[TopicsList] = None


class MessageAttributeMap(RootModel[Optional[Dict[str, MessageAttributeValue]]]):
    root: Optional[Dict[str, MessageAttributeValue]] = None


class PublishBatchRequestEntry(BaseModel):
    Id: String
    Message_1: Message = Field(..., alias='Message')
    MessageAttributes: Optional[MessageAttributeMap] = None
    MessageDeduplicationId: Optional[String] = None
    MessageGroupId: Optional[String] = None
    MessageStructure_1: Optional[MessageStructure] = Field(
        None, alias='MessageStructure'
    )
    Subject_1: Optional[Subject] = Field(None, alias='Subject')


class PublishBatchRequestEntryList(RootModel[List[PublishBatchRequestEntry]]):
    root: List[PublishBatchRequestEntry]


class PublishBatchResponse(BaseModel):
    Failed: Optional[BatchResultErrorEntryList] = None
    Successful: Optional[PublishBatchResultEntryList] = None


class PublishInput(BaseModel):
    Message_1: Message = Field(..., alias='Message')
    MessageAttributes: Optional[MessageAttributeMap] = None
    MessageDeduplicationId: Optional[String] = None
    MessageGroupId: Optional[String] = None
    MessageStructure_1: Optional[MessageStructure] = Field(
        None, alias='MessageStructure'
    )
    PhoneNumber: Optional[String] = None
    Subject_1: Optional[Subject] = Field(None, alias='Subject')
    TargetArn: Optional[String] = None
    TopicArn: Optional[TopicARN] = None


class SubscribeInput(BaseModel):
    Attributes: Optional[SubscriptionAttributesMap] = None
    Endpoint_1: Optional[Endpoint] = Field(None, alias='Endpoint')
    Protocol_1: Protocol = Field(..., alias='Protocol')
    ReturnSubscriptionArn: Optional[Boolean] = None
    TopicArn: TopicARN


class PublishBatchRequestEntries(RootModel[List[PublishBatchRequestEntry]]):
    root: List[PublishBatchRequestEntry]


class ListEndpointsByPlatformApplicationResponse(BaseModel):
    Endpoints: Optional[ListOfEndpoints] = None
    NextToken: Optional[String] = None


class PublishBatchInput(BaseModel):
    PublishBatchRequestEntries: PublishBatchRequestEntryList
    TopicArn: TopicARN
